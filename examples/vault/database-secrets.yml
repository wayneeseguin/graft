# Database Secrets Management with Vault
# 
# This example shows patterns for managing database credentials
# through HashiCorp Vault in production environments

# Basic database connection
database:
  host: db.example.com
  port: 5432
  name: myapp_production
  
  # Retrieve username and password from Vault
  username: (( vault "secret/database/myapp:username" ))
  password: (( vault "secret/database/myapp:password" ))

# Full connection string using concat
connection_string: (( concat "postgresql://" database.username ":" database.password "@" database.host ":" database.port "/" database.name ))

# Multiple database configurations
databases:
  primary:
    host: primary.db.example.com
    credentials:
      username: (( vault "secret/database/primary:username" ))
      password: (( vault "secret/database/primary:password" ))
  
  replica:
    host: replica.db.example.com
    credentials:
      username: (( vault "secret/database/replica:username" ))
      password: (( vault "secret/database/replica:password" ))

# Database with SSL certificates
secure_database:
  host: secure.db.example.com
  port: 5432
  ssl:
    enabled: true
    # Store certificates in Vault base64-encoded
    ca_cert: (( vault "secret/database/ssl:ca_cert" ))
    client_cert: (( vault "secret/database/ssl:client_cert" ))
    client_key: (( vault "secret/database/ssl:client_key" ))

# Dynamic database credentials (Vault database engine)
# These credentials are generated on-demand with TTL
dynamic_db:
  # Vault path for dynamic credentials
  credentials: (( vault "database/creds/my-role" ))
  # The credentials object will contain username and password fields

# Redis configuration
redis:
  host: redis.example.com
  port: 6379
  # Optional password
  password: (( vault "secret/redis/production:password" || "" ))
  # Connection URL
  url: (( concat "redis://:" redis.password "@" redis.host ":" redis.port ))

# MongoDB with replica set
mongodb:
  replica_set: "rs0"
  hosts:
    - mongo1.example.com:27017
    - mongo2.example.com:27017
    - mongo3.example.com:27017
  credentials:
    username: (( vault "secret/mongodb/production:username" ))
    password: (( vault "secret/mongodb/production:password" ))
  # Build connection string
  connection_string: (( concat "mongodb://" mongodb.credentials.username ":" mongodb.credentials.password "@" (( join "," mongodb.hosts )) "/myapp?replicaSet=" mongodb.replica_set ))

# Example output after vault resolution:
# database:
#   host: db.example.com
#   port: 5432
#   name: myapp_production
#   username: dbuser
#   password: supersecret123
# connection_string: postgresql://dbuser:supersecret123@db.example.com:5432/myapp_production